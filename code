#include <Arduino.h>
#include <TMCStepper.h>
#include <SPI.h>

int swich = A0;
int swich1 = A1;

int adimlar = 102500;

int swichdurum = 0;
int swich1durum = 0;

// Motor 1 Pin Bağlantıları
const uint8_t EN_PIN1 = 8;
const uint8_t DIR_PIN1 = 13;
const uint8_t STEP_PIN1 = 12;
const uint8_t CS_PIN1 = 11;
const uint8_t BUTTON_PIN1 = 3;

// Motor 2 Pin Bağlantıları
const uint8_t EN_PIN2 = 6;
const uint8_t DIR_PIN2 = 10;
const uint8_t STEP_PIN2 = 9;
const uint8_t CS_PIN2 = 5;
const uint8_t BUTTON_PIN2 = 7;

int hiz = 75;

// Adım ve Mikro Adım Ayarları
const uint16_t STEPS_PER_REVOLUTION = 200;
const uint16_t MICRO_STEP_VALUE = 8;

// TMC2130 Sürücüleri İçin R_SENSE Değeri
#define R_SENSE 0.11f

// TMC2130 Sürücüler
TMC2130Stepper driver1 = TMC2130Stepper(CS_PIN1, R_SENSE);
TMC2130Stepper driver2 = TMC2130Stepper(CS_PIN2, R_SENSE);

void setup()
{

  pinMode(swich, INPUT);
  pinMode(swich1, INPUT);
  // Motor 1 Pin Modları
  pinMode(EN_PIN1, OUTPUT);
  pinMode(STEP_PIN1, OUTPUT);
  pinMode(DIR_PIN1, OUTPUT);
  pinMode(BUTTON_PIN1, INPUT);

  // Motor 2 Pin Modları
  pinMode(EN_PIN2, OUTPUT);
  pinMode(STEP_PIN2, OUTPUT);
  pinMode(DIR_PIN2, OUTPUT);
  pinMode(BUTTON_PIN2, INPUT);

  // Motorları Başlat
  digitalWrite(EN_PIN1, LOW);
  digitalWrite(EN_PIN2, LOW);
  SPI.begin();
  driver1.begin();
  driver2.begin();

  // Motor Ayarları
  driver1.toff(5);
  driver1.rms_current(900);
  driver1.microsteps(8);
  driver1.en_pwm_mode(true);
  driver1.pwm_autoscale(true);

  driver2.toff(5);
  driver2.rms_current(850);
  driver2.microsteps(8);
  driver2.en_pwm_mode(true);
  driver2.pwm_autoscale(true);

}

void loop()
{
  if (digitalRead(swich) == HIGH)
  {

    digitalWrite(DIR_PIN1, HIGH);
    digitalWrite(DIR_PIN2, HIGH);

    while (digitalRead(BUTTON_PIN2) == LOW)
    {
      digitalWrite(STEP_PIN2, HIGH);
      delayMicroseconds(hiz);
      digitalWrite(STEP_PIN2, LOW);
      delayMicroseconds(hiz);
    }

    digitalWrite(STEP_PIN2, LOW);

    while (digitalRead(BUTTON_PIN1) == LOW)
    {
      digitalWrite(STEP_PIN1, HIGH);
      delayMicroseconds(hiz);
      digitalWrite(STEP_PIN1, LOW);
      delayMicroseconds(hiz);
    }

    // Motorları Durdur
    digitalWrite(STEP_PIN1, LOW);

    digitalWrite(DIR_PIN1, LOW);
    digitalWrite(DIR_PIN2, LOW);

    for (int i = 0; i < adimlar; ++i)
    {
      digitalWrite(STEP_PIN1, HIGH);
      digitalWrite(STEP_PIN2, HIGH);
      delayMicroseconds(hiz);
      digitalWrite(STEP_PIN1, LOW);
      digitalWrite(STEP_PIN2, LOW);
      delayMicroseconds(hiz);
    }

    delay(1000); // İsterseniz bir saniye bekleyebilirsiniz

    // Motorları belirtilen adımda negatif yönde hareket ettir
    digitalWrite(DIR_PIN1, HIGH);
    digitalWrite(DIR_PIN2, HIGH);

    while (digitalRead(BUTTON_PIN2) == LOW && (digitalRead(BUTTON_PIN1) == LOW))
    {
      digitalWrite(STEP_PIN1, HIGH);
      digitalWrite(STEP_PIN2, HIGH);
      delayMicroseconds(hiz);
      digitalWrite(STEP_PIN1, LOW);
      digitalWrite(STEP_PIN2, LOW);
      delayMicroseconds(hiz);
    }

    // Motorları Durdur
    digitalWrite(STEP_PIN1, LOW);
    digitalWrite(STEP_PIN2, LOW);

    // Motorları 2500 Adım Yukarı Çıkart
    digitalWrite(DIR_PIN1, LOW);
    digitalWrite(DIR_PIN2, LOW);

    for (int i = 0; i < 2500; ++i)
    {
      digitalWrite(STEP_PIN1, HIGH);
      digitalWrite(STEP_PIN2, HIGH);
      delayMicroseconds(hiz);
      digitalWrite(STEP_PIN1, LOW);
      digitalWrite(STEP_PIN2, LOW);
      delayMicroseconds(hiz);
    }

    // Motorları Durdur
    digitalWrite(STEP_PIN1, LOW);
    digitalWrite(STEP_PIN2, LOW);
  }
}
